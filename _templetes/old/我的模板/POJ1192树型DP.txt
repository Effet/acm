#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
#define MAXN 1000+10

struct point{
	int x, y, c;
};

int n;
point p[MAXN];
vector<int> a[MAXN];
int dp[MAXN][2], mark[MAXN];

int judge(point a, point b){
	if(abs(a.x - b.x) + abs(a.y - b.y) == 1)
		return 1;
	return 0;
}

void dfs(int v){
	mark[v] = 1, dp[v][0] = 0, dp[v][1] = p[v].c;
	for(unsigned int i=0; i<a[v].size(); i++){
		if(!mark[a[v][i]]){
			int j = a[v][i];
			dfs(j);
			dp[v][0] = max(dp[v][0], max(dp[j][0], dp[j][1]));
			if(dp[j][1]>0) dp[v][1] += dp[j][1];
		}
	}
}

int main(){
	//freopen("in.txt", "r", stdin);
	while(cin>>n){
		memset(mark, 0, sizeof(mark));
		for(int i=0; i<n; i++){
			cin>>p[i].x>>p[i].y>>p[i].c;
		}
		for(int i=0; i<n; i++){
			for(int j=i+1; j<n; j++){
				if(judge(p[i], p[j])){
					a[i].push_back(j);
					a[j].push_back(i);
				}
			}
		}
		dfs(0);
		cout<<max(dp[0][0], dp[0][1])<<endl;
	}
	return 0;
}
