unique的功能是去除相邻的重复元素（只保留一个），还有一个容易忽视的特性是它并不真正把重复的元素删除，不知道这个特性用起来就会出问题。

比如下面这个例子，企图输出无重复的元素：

#include <algorithm>
#include <iostream>
#include <vector> 
using namespace std;

int main()
{
    int arr[] = {1,2,3,4,5,6,1,1,2,3,3,3,4,5,5,6,7,7};
    vector<int> v;
    int len = sizeof(arr) / sizeof(int);
    for (int i=0; i<len; i++)
    {
        v.push_back(arr[i]);
    } 
    vector<int>::iterator i;
    sort(v.begin(), v.end());
    i = unique(v.begin(), v.end()) ;
    //v.erase(i, v.end());
    for (i=v.begin(); i!=v.end(); i++)
    {
        cout << *i <<' ';
    }
    cout << endl;
    system("pause");
    return 0;
}

输出结果：1 2 3 4 5 6 7 3 3 4 4 5 5 5 6 6 7 7

unique只是把重复的元素放到容器的后面，而它本身会返回一个迭代器，只向这些元素的开始部分。因此要向真正删除这些元素，还是要“手工”处理一下。对于上面的例子，可以用vector窗口的erase，把注释的那一行加上。