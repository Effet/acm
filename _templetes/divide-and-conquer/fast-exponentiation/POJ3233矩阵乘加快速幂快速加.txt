#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
struct M{
	int s[32][32];
};
int n, p;
struct M add(struct M a, struct M b){
	int i, j;
	struct M c;
	memset(c.s, 0, sizeof(c.s));
	for(i = 1; i<=n; i++)
		for(j = 1; j<=n; j++)
			c.s[i][j] = (a.s[i][j]+b.s[i][j])%p;
	return c;
}
struct M multiply(struct M a, struct M b){
	int i, j, k;
	struct M c;
	memset(c.s, 0, sizeof(c.s));
	for(i = 1; i<=n; i++)
		for(j = 1; j<=n; j++)
			for(k = 1; k<=n; k++)
				c.s[i][j] = (c.s[i][j]+(a.s[i][k]*b.s[k][j])%p)%p;
	return c;
}
struct M paw(struct M a, int t){
	struct M b;
	memset(b.s, 0, sizeof(b.s));
	if(t==0){
		for(int i = 1; i<=n; i++)
			b.s[i][i] = 1;
		return b;
	}else{
		struct M k = paw(a, t/2);
		if(t&1){
			return multiply(multiply(k, k), a);
		}else
			return multiply(k, k);
	}
}
struct M sum(struct M a, int t){
	if(t==1){
		return a;
	}else{
		struct M tempt = sum(a, t/2);
		if(t&1){
			struct M k = paw(a, t/2+1);
			return add(add(tempt, k), multiply(tempt, k));
		}else{
			return add(tempt, multiply(tempt, paw(a, t/2)));
		}
	}
}
int main(){
	int k, i, j;
	struct M a;
	cin>>n>>k>>p;
	for(i = 1; i<=n; i++)
		for(j = 1; j<=n; j++){
			scanf("%d", &a.s[i][j]);
			a.s[i][j] %= p;
		}
	struct M tempt = sum(a, k);
	for(i = 1; i<=n; i++){
		for(j = 1; j<n; j++){
			cout<<tempt.s[i][j]<<" ";
		}
		printf("%d\n", tempt.s[i][j]);
	}
	return 0;
}
